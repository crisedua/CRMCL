#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üöÄ Configurando CRM Pro...\n');

// Verificar si .env.local existe
const envLocalPath = path.join(__dirname, '.env.local');
const envExamplePath = path.join(__dirname, 'env.example');

if (!fs.existsSync(envLocalPath)) {
  if (fs.existsSync(envExamplePath)) {
    console.log('üìã Creando archivo .env.local desde env.example...');
    fs.copyFileSync(envExamplePath, envLocalPath);
    console.log('‚úÖ Archivo .env.local creado exitosamente!');
  } else {
    console.log('‚ùå No se encontr√≥ env.example');
    process.exit(1);
  }
} else {
  console.log('‚úÖ Archivo .env.local ya existe');
}

// Verificar configuraci√≥n de Supabase
const envContent = fs.readFileSync(envLocalPath, 'utf8');
const hasSupabaseUrl = envContent.includes('NEXT_PUBLIC_SUPABASE_URL=https://');
const hasSupabaseKey = envContent.includes('NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJ');

if (hasSupabaseUrl && hasSupabaseKey) {
  console.log('‚úÖ Variables de Supabase configuradas correctamente');
} else {
  console.log('‚ö†Ô∏è  Variables de Supabase no configuradas completamente');
  console.log('   Aseg√∫rate de que .env.local contenga:');
  console.log('   - NEXT_PUBLIC_SUPABASE_URL');
  console.log('   - NEXT_PUBLIC_SUPABASE_ANON_KEY');
}

console.log('\nüìä Verificando conexi√≥n con Supabase...');

// Test b√°sico de conexi√≥n
const { createClient } = require('@supabase/supabase-js');

try {
  // Leer variables de entorno
  require('dotenv').config({ path: envLocalPath });
  
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  
  if (!supabaseUrl || !supabaseKey) {
    console.log('‚ùå Variables de entorno no cargadas correctamente');
    console.log('   URL:', supabaseUrl ? '‚úÖ' : '‚ùå');
    console.log('   Key:', supabaseKey ? '‚úÖ' : '‚ùå');
    process.exit(1);
  }
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('‚úÖ Cliente de Supabase creado exitosamente');
  console.log('üéØ Proyecto Supabase:', supabaseUrl.split('//')[1].split('.')[0]);
  
} catch (error) {
  console.log('‚ùå Error al crear cliente de Supabase:', error.message);
}

console.log('\nüõ†Ô∏è  Pr√≥ximos pasos:');
console.log('1. Ejecuta: npm run dev');
console.log('2. Ve a: http://localhost:3000');
console.log('3. Reg√≠strate con un email para probar la aplicaci√≥n');
console.log('4. Si hay errores, verifica la configuraci√≥n de Supabase en el dashboard');

console.log('\nüìö Documentaci√≥n:');
console.log('- README.md - Informaci√≥n general');
console.log('- INSTRUCCIONES-SUPABASE.md - Configuraci√≥n de base de datos');
console.log('- DEPLOYMENT.md - Gu√≠a de despliegue');

console.log('\nüéâ Configuraci√≥n completada!');
